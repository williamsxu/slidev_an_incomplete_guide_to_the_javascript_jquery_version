import path from 'path';

const sep = "/";
const delimiter = ":";
const win32 = path.win32;
const posix = path.posix;
const extname = function(p) {
  return path.posix.extname(normalizeWindowsPath(p));
};
const normalize = function(p) {
  return path.posix.normalize(normalizeWindowsPath(p));
};
const join = function(...args) {
  return path.posix.join.apply(path.posix.join, args.map((arg) => normalizeWindowsPath(arg)));
};
const relative = function(from, to) {
  return path.posix.relative(normalizeWindowsPath(from), normalizeWindowsPath(to));
};
const dirname = function(p) {
  return path.posix.dirname(normalizeWindowsPath(p));
};
const resolve = function(...args) {
  return path.posix.resolve.apply(path.posix.resolve, args.map((arg) => normalizeWindowsPath(arg)));
};
const format = function(p) {
  return normalizeWindowsPath(path.posix.format(p));
};
const basename = function(p, ext) {
  return path.posix.basename(normalizeWindowsPath(p), ext);
};
const parse = function(p) {
  return path.posix.parse(normalizeWindowsPath(p));
};
const toNamespacedPath = function(p) {
  return p;
};
const _IS_ABSOLUTE_RE = /^\/|^\\|^[a-zA-Z]:[/\\]/;
const isAbsolute = function(p) {
  return _IS_ABSOLUTE_RE.test(p);
};
function normalizeWindowsPath(input = "") {
  if (!input.includes("\\")) {
    return input;
  }
  return input.replace(/\\/g, "/");
}
const index = {
  win32,
  posix,
  sep,
  delimiter,
  resolve,
  normalize,
  isAbsolute,
  join,
  relative,
  toNamespacedPath,
  dirname,
  basename,
  extname,
  format,
  parse
};

export { basename, index as default, delimiter, dirname, extname, format, isAbsolute, join, normalize, normalizeWindowsPath, parse, posix, relative, resolve, sep, toNamespacedPath, win32 };
